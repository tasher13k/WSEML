WSEML версия 7

Параметр --- имя файла, содержащего программу. Программа --- текстовый файл, содержащий массив JSON, каждый из элементов которого рассматривается как команда. Команды выполняются последовательно, одна за другой. Допустимы следующие команды:
"ввод" --- ввести значение, положить его на внутренний стек;
"вывод" --- снять значение со стека и вывести его;
"взять" --- возможны два варианта: 1) если команда --- это структура, и в ней есть поле с ключом "что", содержимое этого поля кладется на стек; 2) если нет, то со стека берется ссылка, и вместо нее кладется то, на что она ссылается. Ссылка --- объект, у которого есть поле с ключом "режим"; его содержимое показывает, как надо трактовать содержимое других полей. Возможны следующие варианты: а) режим "прямой", тогда у ссылки есть поле с ключом "адрес", в котором находится указатель на то, на что ссылается наша ссылка; б) режим "регистр", тогда у ссылки есть поле "имя", в котором содержится строка --- имя регистра. В этом случае ссылка ссылается на поле с таким именем в наборе регистров. В данной версии набор регистров --- это текущий стековый кадр; в) режим команда --- у ссылки есть поле "имя", в котором содержится строка --- имя поля в исполняемой в данном стековом кадре команде.

Указатель --- это массив так называемых шагов указателя, каждый из которых конкретизирует то, на что указывает набор предыдущих шагов. У каждого шага есть поле с ключом "вид", которое определяет способ данной конкретизации. Возможны следующие варианты: 1) вид "двоичный", тогда имеется поле "адрес", содержащее машинный адрес нужного объекта, преобразованный к типу long long int. Такой шаг выбирает тот объект, адрес которого и находится в поле с ключом "адрес"; в этом случае содержимое всех предыдущих шагов такого указателя игнорируется, так что этот шаг обычно идет первым, если он не единственный. 2) Вид "все", тогда все остальные поля в таком шаге указателя игнорируются, и этот шаг указателя выбирает всю вселенную --- объект, так или иначе содержащий в себе все остальные. Так же, как и в предыдущем случае, содержимое всех предыдущих шагов такого указателя игнорируется, так что этот шаг обычно идет первым, если он не единственный. 3) Шаг "ключ" имеет дополнительное поле "ключ", и выбирает элемент объекта, ключом которого является содержимое этого поля. Использование этого шага предполагает, что последовательность предыдущих шагов указателя выбирает объект. 4) Шаг "индекс" имеет дополнительное поле "индекс", и выбирает соответствующий элемент массива, аналогично предыдущему.

"положить" --- берет со стека ссылку и значение и записывает значение по указанной ссылке, см. описание ссылок в предыдущем пункте.
число или массив --- положить его на стек данных (поле с ключом "данные" в текущем стековом кадре);
объект --- взять у него значение атрибута "имя" и выполнить как команду (весь объект команды передается функции, выполняющей эту команду, как единственный параметр, по ссылке);
строка --- выполнить команду с таким именем, в том числе: арифметическая, логическая, битовая операция, операция сравнения, элементарная математическая функция --- снять со стека нужное количество чисел, вычислить выражение и положить результат на стек. Если операция требует целого (или целых) операндов, а в стеке лежат вещественные числа, кинуть исключение типа invalid_argument.
"метка" --- такая команда должна быть объектом с дополнительным полем с ключом "метка", в котором записана строка-имя метки. Как команда, ничего не делает и служит только для того, чтобы пометить определенное место в последовательности команд.
"переход" --- такая команда должна быть объектом с дополнительным полем с ключом "куда", в котором записана строка-имя метки. Как команда, вызывает передачу управления на метку с указанным именем.
"если" --- такая команда должна быть объектом с дополнительными полями с ключами "да" и "нет", в которых записаны строки-имена меток. Как команда, снимает значение со стека и вызывает передачу управления на метку с именем под ключом "да", если снятое со стека значение отличается от 0, и "нет" --- в противном случае. Поле с ключом "нет" может отсутствовать, в этом случае, если снятое со стека значение равно 0, управление, как обычно, переходит на следующую по порядку команду.


кроме того, допускает пользовательские (реализованные как отдельный блок --- список команд) команды, информация о которых содержится в специальной таблице universe["таблицы"]["команды"], которая представляет собой объект, ключами в котором являются имена команд, а значениями --- объекты, описывающие реализации соответствующих команд. Описание реализации команды --- объект, имеющий следующие поля:
"арг" --- целое число, равное количеству параметров (они переносятся из стека данных предыдущего кадра с сохранением порядка в стек следующего);
"тело" --- список команд, составляющих реализацию данной пользовательской команды.

"вернуть" --- завершить выполнение реализованной команды, и переместить "рез" верхних элементов стека данных в предыдущий стековый кадр с сохранением порядка.

"..." --- команда по умолчанию, запускается, если очередная команда не распознана. Если есть, является реализованной, и реализация прописана в таблице (должок, не сделано в 5 версии).

Русские идентификаторы UTF-8 и расширенные комментарии, файл сборки, пользовательские шаги указателя, обработка ошибок, протоколирование, простенький отладчик, пользовательские режимы ссылок, типизация, контекстные метки у ссылок.
